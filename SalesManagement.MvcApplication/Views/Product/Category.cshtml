@using SalesManagement.MvcApplication
@using SalesManagement.MvcApplication.ViewModels
@using SalesManagement.MvcApplication.ViewModels.Product
@model CategoryViewModel

@{
    string title = null;
    string actionName = null;
    string notification = null;
    string notificationSuccessful = null;
    string buttonTitle = null;
    string linkText = String.Empty;
    switch (Model.ActionType)
    {
        case ActionType.Create:
            title = "Create category";
            actionName = "CreateCategory";
            notification = "Category creation";
            notificationSuccessful = "Category is successfully created";
            buttonTitle = "Create";
            linkText = "← To the categories list";
            break;
        case ActionType.Edit:
            title = "Edit category";
            actionName = "EditCategory";
            notification = "Category editing";
            notificationSuccessful = "Category is successfully changed";
            buttonTitle = "Save";
            linkText = "← Back to the categories list";
            break;
    }
    ViewBag.Title = GlobalConstants.TitlePrefix + title;
}

@section MainContent{
    <h2>
        @if (Model == null || !Model.Success)
        {
            @notification
        }
        else
        {
            @notificationSuccessful
        }
    </h2>

    @Html.ActionLink(linkText, "Categories")
    @using (Html.BeginForm(actionName, "Product", FormMethod.Post))
    {
        <div class="separate">
            @Html.Label("Name")<br />
            @Html.TextBoxFor(m => m.Name)
            @Html.ValidationMessageFor(m => m.Name)
        </div>

        <div class="separate">
            @Html.Label("Characteristics")<br />
            @for (int i = 0; i < Model.Characteristics.Count(); i++)
            {
                @Html.CheckBoxFor(m => m.Characteristics[i].Chosen, new { id = "cbxCharacteristic" + i })
                @Html.Label(Model.Characteristics[i].Name, Model.Characteristics[i].Name, new { @for = "cbxCharacteristic" + i })
                @Html.HiddenFor(m => m.Characteristics[i].Name)
                @Html.HiddenFor(m => m.Characteristics[i].Id)<br />
            }

        </div>
        
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ActionType)
        
        <div class="separate">
            <button type="submit">@buttonTitle</button>
        </div>
    }

    @using (Html.BeginForm("CreateCharacteristic", "Product", FormMethod.Post))
    {
        @Html.Label("Create new characteristic")<br />
        @Html.TextBoxFor(m => m.NewCharacteristicName)
        @Html.ValidationMessageFor(m => m.NewCharacteristicName)
        @Html.HiddenFor(m => m.ActionType)
        @Html.HiddenFor(m => m.Id)
        <button type="submit">Create characteristic</button>
    }
}