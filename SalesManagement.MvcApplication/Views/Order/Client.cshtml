@using SalesManagement.MvcApplication
@using SalesManagement.MvcApplication.ViewModels
@model SalesManagement.MvcApplication.ViewModels.Order.ClientViewModel

@{
    string title = null;
    string actionName = null;
    string notification = null;
    string notificationSuccessful = null;
    string buttonTitle = null;
    string linkText = String.Empty;
    switch (Model.ActionType)
    {
        case ActionType.Create:
            title = "Create client";
            actionName = "CreateClient";
            notification = "Client creation";
            notificationSuccessful = "Client is successfully created";
            buttonTitle = "Create";
            linkText = "← To the clients list";
            break;
        case ActionType.Edit:
            title = "Edit client";
            actionName = "EditClient";
            notification = "Client editing";
            notificationSuccessful = "Client is successfully changed";
            buttonTitle = "Save";
            linkText = "← Back to the clients list";
            break;
    }
    ViewBag.Title = GlobalConstants.TitlePrefix + title;
}

@section MainContent{
    <h2>
        @if (Model == null || !Model.Success)
        {
            @notification
        }
        else
        {
            @notificationSuccessful
        }
    </h2>

    @Html.ActionLink(linkText, "Clients")
    @using (Html.BeginForm(actionName, "Order", FormMethod.Post))
    {
        <div class="separate">
            @Html.Label("First name")<br/>
            @Html.TextBoxFor(m=>m.FirstName)
            @Html.ValidationMessageFor(m => m.FirstName)
        </div>
        
        <div class="separate">
            @Html.Label("Last name")<br/>
            @Html.TextBoxFor(m=>m.LastName)
            @Html.ValidationMessageFor(m => m.LastName)
        </div>
        
        <div class="separate">
            @Html.Label("Phone number")<br/>
            +@Html.TextBoxFor(m=>m.Phone)
            @Html.ValidationMessageFor(m => m.Phone)
        </div>
        
        <div class="separate">
            @Html.Label("E-mail address")<br/>
            @Html.TextBoxFor(m=>m.Email)
            @Html.ValidationMessageFor(m => m.Email)
        </div>
        
        <div class="separate">
            @Html.Label("Home address")<br/>
            @Html.TextBoxFor(m=>m.Address)
            @Html.ValidationMessageFor(m => m.Address)
        </div>
        
        <div class="separate">
            @Html.Label("Client id")<br/>
            @Html.TextBoxFor(m=>m.ClientId,new {@readonly=""})
            @Html.ValidationMessageFor(m => m.ClientId)
            @*<button type="button" id="generateId">Generate</button>*@
        </div>
       
        
        @Html.HiddenFor(m => m.ActionType)
        
        <div class="separate">
            <button type="submit">@buttonTitle</button>
        </div>
    }
    <script type="text/javascript" src="~/Scripts/Order/CreateClient.js"></script>
}